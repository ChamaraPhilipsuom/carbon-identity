<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- ~ Copyright (c) 2005-2011, WSO2 Inc. (http://www.wso2.org) All Rights 
	Reserved. ~ ~ WSO2 Inc. licenses this file to you under the Apache License, 
	~ Version 2.0 (the "License"); you may not use this file except ~ in compliance 
	with the License. ~ You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 
	~ ~ Unless required by applicable law or agreed to in writing, ~ software 
	distributed under the License is distributed on an ~ "AS IS" BASIS, WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY ~ KIND, either express or implied. See the 
	License for the ~ specific language governing permissions and limitations 
	~ under the License. -->

<Server xmlns="http://wso2.org/projects/carbon/carbon.xml">

    <JDBCPersistenceManager>
        <DataSource>
            <!-- Include a data source name (jndiConfigName) from the set of data
                sources defined in master-datasources.xml -->
            <Name>jdbc/WSO2CarbonDB</Name>
        </DataSource>
        <!-- If the identity database is created from another place and if it is
            required to skip schema initialization during the server start up, set the
            following property to "true". -->
        <!-- <SkipDBSchemaCreation>false</SkipDBSchemaCreation> -->
        <!--SessionDataPersist>
            <Enable>true</Enable>
            <EnableCleanUp>true</EnableCleanUp>
            <Temporary>false</Temporary-->
        <!--/SessionDataPersist-->
    </JDBCPersistenceManager>

    <!-- Time configurations are in minutes -->
    <TimeConfig>
        <SessionIdleTimeout>15</SessionIdleTimeout>
<<<<<<< HEAD
        <!-- Minutes -->
        <RememberMeTimeout>20160</RememberMeTimeout>
        <!-- Minutes -->
        <PersistanceCleanUpTimeout>20160</PersistanceCleanUpTimeout>
        <!-- Minutes -->
        <PersistanceCleanUpPeriod>1140</PersistanceCleanUpPeriod>
        <!-- Minutes -->
=======
        <RememberMeTimeout>20160</RememberMeTimeout>
        <PersistanceCleanUpTimeout>20160</PersistanceCleanUpTimeout>
        <PersistanceCleanUpPeriod>1140</PersistanceCleanUpPeriod>
>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
    </TimeConfig>

    <!-- Security configurations -->
    <Security>
        <!-- The directory under which all other KeyStore files will be stored -->
        <KeyStoresDir>${carbon.home}/conf/keystores</KeyStoresDir>
    </Security>

    <Identity>
        <IssuerPolicy>SelfAndManaged</IssuerPolicy>
        <TokenValidationPolicy>CertValidate</TokenValidationPolicy>
        <BlackList></BlackList>
        <WhiteList></WhiteList>
        <System>
            <KeyStore></KeyStore>
            <StorePass></StorePass>
        </System>
    </Identity>

    <OpenID>
<<<<<<< HEAD
        <!-- Default configurations are build out of server URL -->
        <!--	<OpenIDServerUrl>https://localhost:9443/openidserver</OpenIDServerUrl> -->
        <!--	<OpenIDUserPattern>https://localhost:9443/openid/</OpenIDUserPattern>  -->
        <!-- If the users must be prompted for approval -->
        <OpenIDSkipUserConsent>false</OpenIDSkipUserConsent>
        <!-- Expiry time of the OpenID RememberMe token in minutes -->
        <OpenIDRememberMeExpiry>7200</OpenIDRememberMeExpiry>
        <!-- Multifactor Authentication configuration -->
        <UseMultifactorAuthentication>false</UseMultifactorAuthentication>
        <!-- To enable or disable openid dumb mode -->
        <DisableOpenIDDumbMode>false</DisableOpenIDDumbMode>
        <!-- remember me session timeout in seconds -->
        <SessionTimeout>36000</SessionTimeout>
        <!-- skips authentication if valid SAML2 Web SSO browser session available -->
        <AcceptSAMLSSOLogin>false</AcceptSAMLSSOLogin>
        <ClaimsRetrieverImplClass>org.wso2.carbon.identity.provider.openid.claims.DefaultClaimsRetriever
        </ClaimsRetrieverImplClass>
    </OpenID>

=======
        <!--
            Default values for OpenIDServerUrl and OpenIDUSerPattern are built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/<context>
            If above format doesn't satisfy uncomment the following configs and explicitly configure the values
         -->
        <!--OpenIDServerUrl>https://localhost:9443/openidserver</OpenIDServerUrl-->
        <!--OpenIDUserPattern>https://localhost:9443/openid/</OpenIDUserPattern-->

        <!-- If the users must be prompted for approval -->
        <OpenIDSkipUserConsent>false</OpenIDSkipUserConsent>
        <!-- Expiry time of the OpenID RememberMe token in minutes -->
        <OpenIDRememberMeExpiry>7200</OpenIDRememberMeExpiry>
        <!-- Multifactor Authentication configuration -->
        <UseMultifactorAuthentication>false</UseMultifactorAuthentication>
        <!-- To enable or disable openid dumb mode -->
        <DisableOpenIDDumbMode>false</DisableOpenIDDumbMode>
        <!-- remember me session timeout in seconds -->
        <SessionTimeout>36000</SessionTimeout>
        <!-- skips authentication if valid SAML2 Web SSO browser session available -->
        <AcceptSAMLSSOLogin>false</AcceptSAMLSSOLogin>
        <ClaimsRetrieverImplClass>org.wso2.carbon.identity.provider.openid.claims.DefaultClaimsRetriever
        </ClaimsRetrieverImplClass>

        <!--
               OpenID private association store is configurable from following configs.
               It includes two new replication stores,
                       i.   OpenIDServerAssociationStore (Default association store)
                       ii.  PrivateAssociationCryptoStore
                       iii. PrivateAssociationReplicationStore
        -->

        <!-- Specify full qualified class name of the class which going to use as private association store -->
        <!-- 
		<OpenIDPrivateAssociationStoreClass>org.wso2.carbon.identity.provider.openid.PrivateAssociationCryptoStore</OpenIDPrivateAssociationStoreClass>
	-->

        <!-- The exiration time (in minutes) for the OpenID association -->
        <!--
		<OpenIDAssociationExpiryTime>15</OpenIDAssociationExpiryTime>
	-->

        <!-- Configs specific to PrivateAssociationCryptoStore -->
        <!-- Server secret. This value should be the same in all nodes in the cluster -->
        <!--
		<OpenIDPrivateAssociationServerKey>qewlj324lmasc</OpenIDPrivateAssociationServerKey>
	-->

        <!-- Configs specific to PrivateAssociationCryptoStore -->
        <!-- This enable private association cleanup task which cleans expired private associations -->
        <!--
		<EnableOpenIDAssociationCleanupTask>true</EnableOpenIDAssociationCleanupTask>
	-->
        <!-- Time Period (in minutes) that cleanup task would run -->
        <!--
		<OpenIDAssociationCleanupPeriod>15</OpenIDAssociationCleanupPeriod>
	-->
    </OpenID>

>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
    <OAuth>
        <AppInfoCacheTimeout>-1</AppInfoCacheTimeout>
        <AuthorizationGrantCacheTimeout>-1</AuthorizationGrantCacheTimeout>
        <SessionDataCacheTimeout>-1</SessionDataCacheTimeout>
        <ClaimCacheTimeout>-1</ClaimCacheTimeout>
<<<<<<< HEAD
        <RequestTokenUrl>https://localhost:9443/oauth/request-token</RequestTokenUrl>
        <AccessTokenUrl>https://localhost:9443/oauth/access-token</AccessTokenUrl>
        <AuthorizeUrl>https://localhost:9443/oauth/authorize-url</AuthorizeUrl>
=======

        <!--
            Default values for OAuth1RequestTokenUrl, OAuth1AccessTokenUrl, OAuth1AuthorizeUrl
            OAuth2AuthzEPUrl, OAuth2TokenEPUrl and OAuth2UserInfoEPUrl are built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/<context>/<path>
            If above format doesn't satisfy uncomment the following configs and explicitly configure the values
         -->
        <!--OAuth1RequestTokenUrl>https://localhost:9443/oauth/request-token</OAuth1RequestTokenUrl-->
        <!--OAuth1AuthorizeUrl>https://localhost:9443/oauth/authorize-url</OAuth1AuthorizeUrl-->
        <!--OAuth1AccessTokenUrl>https://localhost:9443/oauth/access-token</OAuth1AccessTokenUrl-->
        <!--OAuth2AuthzEPUrl>https://localhost:9443/oauth2/authorize</OAuth2AuthzEPUrl-->
        <!--OAuth2TokenEPUrl>https://localhost:9443/oauth2/token</OAuth2TokenEPUrl-->
        <!--OAuth2UserInfoEPUrl>https://localhost:9443/oauth2/userinfo</OAuth2UserInfoEPUrl-->

>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
        <!-- Default validity period for Authorization Code in seconds -->
        <AuthorizationCodeDefaultValidityPeriod>300</AuthorizationCodeDefaultValidityPeriod>
        <!-- Default validity period for application access tokens in seconds -->
        <AccessTokenDefaultValidityPeriod>3600</AccessTokenDefaultValidityPeriod>
        <!-- Default validity period for user access tokens in seconds -->
        <UserAccessTokenDefaultValidityPeriod>3600</UserAccessTokenDefaultValidityPeriod>
        <!-- Validity period for refresh token -->
        <RefreshTokenValidityPeriod>84600</RefreshTokenValidityPeriod>
        <!-- Timestamp skew in seconds -->
        <TimestampSkew>300</TimestampSkew>
        <!-- Enable OAuth caching -->
        <EnableOAuthCache>true</EnableOAuthCache>
        <!-- Enable renewal of refresh token for refresh_token grant -->
        <RenewRefreshTokenForRefreshGrant>true</RenewRefreshTokenForRefreshGrant>
        <!-- Process the token before storing it in database, e.g. encrypting -->
<<<<<<< HEAD
        <TokenPersistenceProcessor>org.wso2.carbon.identity.oauth.tokenprocessor.PlainTextPersistenceProcessor
        </TokenPersistenceProcessor>
        <!-- Supported Client Autnetication Methods -->
=======
        <TokenPersistenceProcessor>org.wso2.carbon.identity.oauth.tokenprocessor.PlainTextPersistenceProcessor</TokenPersistenceProcessor>
        <!-- Supported Client Authentication Methods -->
>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
        <ClientAuthHandlers>
            <ClientAuthHandler
                    Class="org.wso2.carbon.identity.oauth2.token.handlers.clientauth.BasicAuthClientAuthHandler">
                <Property Name="StrictClientCredentialValidation">false</Property>
            </ClientAuthHandler>
        </ClientAuthHandlers>
        <!-- Supported Response Types -->
        <SupportedResponseTypes>
            <SupportedResponseType>
                <ResponseTypeName>token</ResponseTypeName>
<<<<<<< HEAD
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.TokenResponseTypeHandler
                </ResponseTypeHandlerImplClass>
            </SupportedResponseType>
            <SupportedResponseType>
                <ResponseTypeName>code</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.CodeResponseTypeHandler
                </ResponseTypeHandlerImplClass>
=======
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.TokenResponseTypeHandler</ResponseTypeHandlerImplClass>
            </SupportedResponseType>
            <SupportedResponseType>
                <ResponseTypeName>code</ResponseTypeName>
                <ResponseTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.authz.handlers.CodeResponseTypeHandler</ResponseTypeHandlerImplClass>
>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
            </SupportedResponseType>
        </SupportedResponseTypes>
        <!-- Supported Grant Types -->
        <SupportedGrantTypes>
            <SupportedGrantType>
                <GrantTypeName>authorization_code</GrantTypeName>
<<<<<<< HEAD
                <GrantTypeHandlerImplClass>
                    org.wso2.carbon.identity.oauth2.token.handlers.grant.AuthorizationCodeGrantHandler
                </GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>password</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.PasswordGrantHandler
                </GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>refresh_token</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.RefreshGrantHandler
                </GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>client_credentials</GrantTypeName>
                <GrantTypeHandlerImplClass>
                    org.wso2.carbon.identity.oauth2.token.handlers.grant.ClientCredentialsGrantHandler
                </GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>urn:ietf:params:oauth:grant-type:saml2-bearer</GrantTypeName>
                <GrantTypeHandlerImplClass>
                    org.wso2.carbon.identity.oauth2.token.handlers.grant.saml.SAML2BearerGrantHandler
                </GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>iwa:ntlm</GrantTypeName>
                <GrantTypeHandlerImplClass>
                    org.wso2.carbon.identity.oauth2.token.handlers.grant.iwa.ntlm.NTLMAuthenticationGrantHandler
                </GrantTypeHandlerImplClass>
=======
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.AuthorizationCodeGrantHandler</GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>password</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.PasswordGrantHandler</GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>refresh_token</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.RefreshGrantHandler</GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>client_credentials</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.ClientCredentialsGrantHandler</GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>urn:ietf:params:oauth:grant-type:saml2-bearer</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.saml.SAML2BearerGrantHandler</GrantTypeHandlerImplClass>
            </SupportedGrantType>
            <SupportedGrantType>
                <GrantTypeName>iwa:ntlm</GrantTypeName>
                <GrantTypeHandlerImplClass>org.wso2.carbon.identity.oauth2.token.handlers.grant.iwa.ntlm.NTLMAuthenticationGrantHandler</GrantTypeHandlerImplClass>
>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
            </SupportedGrantType>
        </SupportedGrantTypes>
        <OAuthCallbackHandlers>
            <OAuthCallbackHandler Class="org.wso2.carbon.identity.oauth.callback.DefaultCallbackHandler"/>
        </OAuthCallbackHandlers>
        <!--TokenValidators>
            <TokenValidator type="bearer" class="org.wso2.carbon.identity.oauth2.validators.DefaultOAuth2TokenValidator"/>
        </TokenValidators-->
        <!-- Assertions can be used to embedd parameters into access token. -->
        <EnableAssertions>
            <UserName>false</UserName>
        </EnableAssertions>

        <!-- This should be set to true when using multiple user stores and keys
            should saved into different tables according to the user store. By default
            all the application keys are saved in to the same table. UserName Assertion
            should be 'true' to use this. -->
        <EnableAccessTokenPartitioning>false</EnableAccessTokenPartitioning>
        <!-- user store domain names and mapping to new table name. eg: if you
            provide 'A:foo.com', foo.com should be the user store domain name and 'A'
            represent the relavant mapping of token store table, i.e. tokens will be
            added to a table called IDN_OAUTH2_ACCESS_TOKEN_A. -->
<<<<<<< HEAD
        <AccessTokenPartitioningDomains><!-- A:foo.com, B:bar.com -->
        </AccessTokenPartitioningDomains>
        <AuthorizationContextTokenGeneration>
            <Enabled>false</Enabled>
            <TokenGeneratorImplClass>org.wso2.carbon.identity.oauth2.authcontext.JWTTokenGenerator
            </TokenGeneratorImplClass>
            <ClaimsRetrieverImplClass>org.wso2.carbon.identity.oauth2.authcontext.DefaultClaimsRetriever
            </ClaimsRetrieverImplClass>
=======
        <AccessTokenPartitioningDomains><!-- A:foo.com, B:bar.com --></AccessTokenPartitioningDomains>
        <AuthorizationContextTokenGeneration>
            <Enabled>false</Enabled>
            <TokenGeneratorImplClass>org.wso2.carbon.identity.oauth2.authcontext.JWTTokenGenerator</TokenGeneratorImplClass>
            <ClaimsRetrieverImplClass>org.wso2.carbon.identity.oauth2.authcontext.DefaultClaimsRetriever</ClaimsRetrieverImplClass>
>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
            <ConsumerDialectURI>http://wso2.org/claims</ConsumerDialectURI>
            <SignatureAlgorithm>SHA256withRSA</SignatureAlgorithm>
            <AuthorizationContextTTL>15</AuthorizationContextTTL>
        </AuthorizationContextTokenGeneration>
        <SAML2Grant>
            <!--SAML2TokenHandler></SAML2TokenHandler-->
        </SAML2Grant>
        <OpenIDConnect>
            <IDTokenBuilder>org.wso2.carbon.identity.openidconnect.DefaultIDTokenBuilder</IDTokenBuilder>
<<<<<<< HEAD
            <IDTokenIssuerID>https://localhost:9443/oauth2endpoints/token</IDTokenIssuerID>
            <IDTokenSubjectClaim>http://wso2.org/claims/givenname</IDTokenSubjectClaim>
            <IDTokenCustomClaimsCallBackHandler>org.wso2.carbon.identity.openidconnect.SAMLAssertionClaimsCallback
            </IDTokenCustomClaimsCallBackHandler>
            <IDTokenExpiration>3600</IDTokenExpiration>
            <UserInfoEndpointClaimDialect>http://wso2.org/claims</UserInfoEndpointClaimDialect>
            <UserInfoEndpointClaimRetriever>
                org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoUserStoreClaimRetriever
            </UserInfoEndpointClaimRetriever>
            <UserInfoEndpointRequestValidator>
                org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInforRequestDefaultValidator
            </UserInfoEndpointRequestValidator>
            <UserInfoEndpointAccessTokenValidator>
                org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoISAccessTokenValidator
            </UserInfoEndpointAccessTokenValidator>
            <UserInfoEndpointResponseBuilder>
                org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoJSONResponseBuilder
            </UserInfoEndpointResponseBuilder>
            <SkipUserConsent>false</SkipUserConsent>
        </OpenIDConnect>
    </OAuth>
    <OpenIDConnectDiscovery>
        <Configuration name="default">
            <Issuer>MyIssuer</Issuer>
            <Authorization_endpoint></Authorization_endpoint>
            <Token_endpoint></Token_endpoint>
            <Userinfo_endpoint></Userinfo_endpoint>
            <Jwks_uri></Jwks_uri>
            <Registration_endpoint></Registration_endpoint>
            <Scopes_supported></Scopes_supported>
            <Response_types_supported></Response_types_supported>
            <Response_modes_supported></Response_modes_supported>
            <Grant_types_supported></Grant_types_supported>
            <Acr_values_supported></Acr_values_supported>
            <Subject_types_supported></Subject_types_supported>
            <ID_token_signing_alg_values_supported></ID_token_signing_alg_values_supported>
            <ID_token_encryption_alg_values_supported></ID_token_encryption_alg_values_supported>
            <ID_token_encryption_enc_values_supported></ID_token_encryption_enc_values_supported>
            <Userinfo_signing_alg_values_supported></Userinfo_signing_alg_values_supported>
            <Userinfo_encryption_alg_values_supported></Userinfo_encryption_alg_values_supported>
            <Userinfo_encryption_enc_values_supported></Userinfo_encryption_enc_values_supported>
            <Request_object_signing_alg_values_supported></Request_object_signing_alg_values_supported>
            <Request_object_encryption_alg_values_supported></Request_object_encryption_alg_values_supported>
            <Request_object_encryption_enc_values_supported></Request_object_encryption_enc_values_supported>
            <Token_endpoint_auth_methods_supported></Token_endpoint_auth_methods_supported>
            <Token_endpoint_auth_signing_alg_values_supported></Token_endpoint_auth_signing_alg_values_supported>
            <Display_values_supported></Display_values_supported>
            <Claim_types_supported></Claim_types_supported>
            <Claims_supported></Claims_supported>
            <Service_documentation></Service_documentation>
            <Claims_locales_supported></Claims_locales_supported>
            <UI_locales_supported></UI_locales_supported>
            <Claims_parameter_supported></Claims_parameter_supported>
            <Request_parameter_supported></Request_parameter_supported>
            <Request_uri_parameter_supported></Request_uri_parameter_supported>
            <Require_request_uri_registration></Require_request_uri_registration>
            <OP_policy_uri></OP_policy_uri>
            <OP_tos_uri></OP_tos_uri>
        </Configuration>
        <Configuration name="chamara">
            <Issuer>Chamara</Issuer>
            <Authorization_endpoint>endpoint.example</Authorization_endpoint>
            <Token_endpoint></Token_endpoint>
            <Userinfo_endpoint></Userinfo_endpoint>
            <Jwks_uri></Jwks_uri>
            <Registration_endpoint></Registration_endpoint>
            <Scopes_supported></Scopes_supported>
            <Response_types_supported></Response_types_supported>
            <Response_modes_supported></Response_modes_supported>
            <Grant_types_supported></Grant_types_supported>
            <Acr_values_supported></Acr_values_supported>
            <Subject_types_supported></Subject_types_supported>
            <ID_token_signing_alg_values_supported></ID_token_signing_alg_values_supported>
            <ID_token_encryption_alg_values_supported></ID_token_encryption_alg_values_supported>
            <ID_token_encryption_enc_values_supported></ID_token_encryption_enc_values_supported>
            <Userinfo_signing_alg_values_supported></Userinfo_signing_alg_values_supported>
            <Userinfo_encryption_alg_values_supported></Userinfo_encryption_alg_values_supported>
            <Userinfo_encryption_enc_values_supported></Userinfo_encryption_enc_values_supported>
            <Request_object_signing_alg_values_supported></Request_object_signing_alg_values_supported>
            <Request_object_encryption_alg_values_supported></Request_object_encryption_alg_values_supported>
            <Request_object_encryption_enc_values_supported></Request_object_encryption_enc_values_supported>
            <Token_endpoint_auth_methods_supported></Token_endpoint_auth_methods_supported>
            <Token_endpoint_auth_signing_alg_values_supported></Token_endpoint_auth_signing_alg_values_supported>
            <Display_values_supported></Display_values_supported>
            <Claim_types_supported></Claim_types_supported>
            <Claims_supported></Claims_supported>
            <Service_documentation></Service_documentation>
            <Claims_locales_supported></Claims_locales_supported>
            <UI_locales_supported></UI_locales_supported>
            <Claims_parameter_supported></Claims_parameter_supported>
            <Request_parameter_supported></Request_parameter_supported>
            <Request_uri_parameter_supported></Request_uri_parameter_supported>
            <Require_request_uri_registration></Require_request_uri_registration>
            <OP_policy_uri></OP_policy_uri>
            <OP_tos_uri></OP_tos_uri>
        </Configuration>
    </OpenIDConnectDiscovery>
    <!--<WebFinger>-->
            <!--<Link rel="http://openid.net/specs/connect/1.0/issuer">wso2.com</Link>-->
    <!--</WebFinger>-->
    <MultifactorAuthentication>
        <XMPPSettings>
            <XMPPConfig>
                <XMPPProvider>gtalk</XMPPProvider>
                <XMPPServer>talk.google.com</XMPPServer>
                <XMPPPort>5222</XMPPPort>
                <XMPPExt>gmail.com</XMPPExt>
                <XMPPUserName>multifactor1@gmail.com</XMPPUserName>
                <XMPPPassword>wso2carbon</XMPPPassword>
            </XMPPConfig>
        </XMPPSettings>
    </MultifactorAuthentication>

=======
            <!--
                Default value for IDTokenIssuerID, is OAuth2TokenEPUrl.
                If that doesn't satisfy uncomment the following config and explicitly configure the value
            -->
            <!--IDTokenIssuerID>https://localhost:9443/oauth2/token</IDTokenIssuerID-->
            <IDTokenSubjectClaim>http://wso2.org/claims/givenname</IDTokenSubjectClaim>
            <IDTokenCustomClaimsCallBackHandler>org.wso2.carbon.identity.openidconnect.SAMLAssertionClaimsCallback</IDTokenCustomClaimsCallBackHandler>
            <IDTokenExpiration>3600</IDTokenExpiration>
            <UserInfoEndpointClaimDialect>http://wso2.org/claims</UserInfoEndpointClaimDialect>
            <UserInfoEndpointClaimRetriever>org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoUserStoreClaimRetriever</UserInfoEndpointClaimRetriever>
            <UserInfoEndpointRequestValidator>org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInforRequestDefaultValidator</UserInfoEndpointRequestValidator>
            <UserInfoEndpointAccessTokenValidator>org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoISAccessTokenValidator</UserInfoEndpointAccessTokenValidator>
            <UserInfoEndpointResponseBuilder>org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoJSONResponseBuilder</UserInfoEndpointResponseBuilder>
            <SkipUserConsent>false</SkipUserConsent>
        </OpenIDConnect>
    </OAuth>

    <MultifactorAuthentication>
        <!--Enable>false</Enable-->
        <XMPPSettings>
            <XMPPConfig>
                <XMPPProvider>gtalk</XMPPProvider>
                <XMPPServer>talk.google.com</XMPPServer>
                <XMPPPort>5222</XMPPPort>
                <XMPPExt>gmail.com</XMPPExt>
                <XMPPUserName>multifactor1@gmail.com</XMPPUserName>
                <XMPPPassword>wso2carbon</XMPPPassword>
            </XMPPConfig>
        </XMPPSettings>
    </MultifactorAuthentication>

>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
    <SSOService>
        <PersistanceCacheTimeout>157680000</PersistanceCacheTimeout>
        <SessionIndexCacheTimeout>157680000</SessionIndexCacheTimeout>
        <EntityId>localhost</EntityId>
<<<<<<< HEAD
        <IdentityProviderURL>https://localhost:9443/samlsso</IdentityProviderURL>
=======
        <!--
            Default value for IdentityProviderURL is  built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/samlsso
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <!--IdentityProviderURL>https://localhost:9443/samlsso</IdentityProviderURL-->
>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
        <SingleLogoutRetryCount>5</SingleLogoutRetryCount>
        <SingleLogoutRetryInterval>60000</SingleLogoutRetryInterval>
        <!-- in milli seconds -->
        <TenantPartitioningEnabled>false</TenantPartitioningEnabled>
        <SessionTimeout>36000</SessionTimeout>
        <!-- remember me session timeout in seconds -->
        <!-- skips authentication if valid SAML2 Web SSO browser session available -->
<<<<<<< HEAD
        <AttributeStatementBuilder>org.wso2.carbon.identity.sso.saml.attributes.UserAttributeStatementBuilder
        </AttributeStatementBuilder>
        <AttributesClaimDialect>http://wso2.org/claims</AttributesClaimDialect>
        <AcceptOpenIDLogin>false</AcceptOpenIDLogin>
        <ClaimsRetrieverImplClass>org.wso2.carbon.identity.sso.saml.builders.claims.DefaultClaimsRetriever
        </ClaimsRetrieverImplClass>
        <SAMLSSOAssertionBuilder>org.wso2.carbon.identity.sso.saml.builders.assertion.DefaultSAMLAssertionBuilder
        </SAMLSSOAssertionBuilder>
        <SAMLSSOEncrypter>org.wso2.carbon.identity.sso.saml.builders.encryption.DefaultSSOEncrypter</SAMLSSOEncrypter>
        <SAMLSSOSigner>org.wso2.carbon.identity.sso.saml.builders.signature.DefaultSSOSigner</SAMLSSOSigner>
        <SAML2HTTPRedirectSignatureValidator>
            org.wso2.carbon.identity.sso.saml.validators.SAML2HTTPRedirectDeflateSignatureValidator
        </SAML2HTTPRedirectSignatureValidator>
        <!--SAMLSSOResponseBuilder>org.wso2.carbon.identity.sso.saml.builders.DefaultResponseBuilder</SAMLSSOResponseBuilder-->

        <!-- SAML Token validity period in minutes -->
        <SAMLResponseValidityPeriod>5</SAMLResponseValidityPeriod>
        <UseAuthenticatedUserDomainCrypto>false</UseAuthenticatedUserDomainCrypto>
    </SSOService>

    <EntitlementSettings>
        <!-- Uncomment this to enable on-demand policy loading -->
        <!--OnDemandPolicyLoading> <Enable>true</Enable> <MaxInMemoryPolicies>100</MaxInMemoryPolicies>
            </OnDemandPolicyLoading -->
        <DecisionCaching>
            <Enable>true</Enable>
            <CachingInterval>36000</CachingInterval>
        </DecisionCaching>
        <AttributeCaching>
            <Enable>true</Enable>
        </AttributeCaching>
        <ThirftBasedEntitlementConfig>
            <EnableThriftService>false</EnableThriftService>
            <ReceivePort>${Ports.ThriftEntitlementReceivePort}</ReceivePort>
            <ClientTimeout>10000</ClientTimeout>
            <KeyStore>
                <Location>${carbon.home}/repository/resources/security/wso2carbon.jks</Location>
                <Password>wso2carbon</Password>
            </KeyStore>
            <!-- Enable this element to mention the host-name of your IS machine -->
            <ThriftHostName>localhost</ThriftHostName>
        </ThirftBasedEntitlementConfig>
    </EntitlementSettings>

    <SCIMAuthenticators>
        <Authenticator class="org.wso2.carbon.identity.scim.provider.auth.BasicAuthHandler">
            <Property name="Priority">5</Property>
        </Authenticator>
        <Authenticator class="org.wso2.carbon.identity.scim.provider.auth.OAuthHandler">
            <Property name="Priority">10</Property>
            <Property name="AuthorizationServer">local://services</Property>
            <!--Property name="AuthorizationServer">https://localhost:9443/services</Property>
            <Property name="UserName">admin</Property>
            <Property name="Password">admin</Property-->
        </Authenticator>
    </SCIMAuthenticators>
    <!--SessionContextCache>
        <Enable>true</Enable>
        <Capacity>100000</Capacity>
    </SessionContextCache-->
=======
        <AttributeStatementBuilder>org.wso2.carbon.identity.sso.saml.attributes.UserAttributeStatementBuilder</AttributeStatementBuilder>
        <AttributesClaimDialect>http://wso2.org/claims</AttributesClaimDialect>
        <AcceptOpenIDLogin>false</AcceptOpenIDLogin>
        <ClaimsRetrieverImplClass>org.wso2.carbon.identity.sso.saml.builders.claims.DefaultClaimsRetriever</ClaimsRetrieverImplClass>
        <SAMLSSOAssertionBuilder>org.wso2.carbon.identity.sso.saml.builders.assertion.DefaultSAMLAssertionBuilder</SAMLSSOAssertionBuilder>
        <SAMLSSOEncrypter>org.wso2.carbon.identity.sso.saml.builders.encryption.DefaultSSOEncrypter</SAMLSSOEncrypter>
        <SAMLSSOSigner>org.wso2.carbon.identity.sso.saml.builders.signature.DefaultSSOSigner</SAMLSSOSigner>
        <SAML2HTTPRedirectSignatureValidator>org.wso2.carbon.identity.sso.saml.validators.SAML2HTTPRedirectDeflateSignatureValidator</SAML2HTTPRedirectSignatureValidator>
        <!--SAMLSSOResponseBuilder>org.wso2.carbon.identity.sso.saml.builders.DefaultResponseBuilder</SAMLSSOResponseBuilder-->

        <!-- SAML Token validity period in minutes -->
        <SAMLResponseValidityPeriod>5</SAMLResponseValidityPeriod>
        <UseAuthenticatedUserDomainCrypto>false</UseAuthenticatedUserDomainCrypto>
    </SSOService>

    <SecurityTokenService>
        <!--
            Default value for IdentityProviderURL is  built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/services/wso2carbon-sts
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <!--IdentityProviderURL>https://localhost:9443/services/wso2carbon-sts</IdentityProviderURL-->
    </SecurityTokenService>

    <PassiveSTS>
        <!--
            Default value for IdentityProviderURL is  built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/passivests
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <!--IdentityProviderURL>https://localhost:9443/passivests</IdentityProviderURL-->
    </PassiveSTS>

    <EntitlementSettings>
        <!-- Uncomment this to enable on-demand policy loading -->
        <!--OnDemandPolicyLoading> <Enable>true</Enable> <MaxInMemoryPolicies>100</MaxInMemoryPolicies>
            </OnDemandPolicyLoading -->
        <DecisionCaching>
            <Enable>true</Enable>
            <CachingInterval>36000</CachingInterval>
        </DecisionCaching>
        <AttributeCaching>
            <Enable>true</Enable>
        </AttributeCaching>
        <ThirftBasedEntitlementConfig>
            <EnableThriftService>false</EnableThriftService>
            <ReceivePort>${Ports.ThriftEntitlementReceivePort}</ReceivePort>
            <ClientTimeout>10000</ClientTimeout>
            <KeyStore>
                <Location>${carbon.home}/repository/resources/security/wso2carbon.jks</Location>
                <Password>wso2carbon</Password>
            </KeyStore>
            <!-- Enable this element to mention the host-name of your IS machine -->
            <ThriftHostName>localhost</ThriftHostName>
        </ThirftBasedEntitlementConfig>
    </EntitlementSettings>

    <SCIM>
        <!--
            Default value for UserEPUrl and GroupEPUrl are built in following format
            https://<HostName>:<MgtTrpProxyPort except 443>/<ProxyContextPath>/<context>/<path>
            If that doesn't satisfy uncomment the following config and explicitly configure the value
        -->
        <!--UserEPUrl>https://localhost:9443/wso2/scim/Users</UserEPUrl-->
        <!--GroupEPUrl>https://localhost:9443/wso2/scim/Groups</GroupEPUrl-->
        <SCIMAuthenticators>
            <Authenticator class="org.wso2.carbon.identity.scim.provider.auth.BasicAuthHandler">
                <Property name="Priority">5</Property>
            </Authenticator>
            <Authenticator class="org.wso2.carbon.identity.scim.provider.auth.OAuthHandler">
                <Property name="Priority">10</Property>
                <Property name="AuthorizationServer">local://services</Property>
                <!--Property name="AuthorizationServer">https://localhost:9443/services</Property>
                <Property name="UserName">admin</Property>
                <Property name="Password">admin</Property-->
            </Authenticator>
        </SCIMAuthenticators>
    </SCIM>

    <!--SessionContextCache>
        <Enable>true</Enable>
        <Capacity>100000</Capacity>
    </SessionContextCache-->

    <EventListeners>
        <EventListener type="org.wso2.carbon.user.core.listener.UserOperationEventListener"
                       name="org.wso2.carbon.identity.workflow.mgt.impl.userstore.UserStoreActionListener"
                       orderId="10" enable="false"/>
        <EventListener type="org.wso2.carbon.user.core.listener.UserOperationEventListener" name="org.wso2.carbon.identity.mgt.IdentityMgtEventListener"
                       orderId="50" enable="false"/>
        <EventListener type="org.wso2.carbon.user.core.listener.UserOperationEventListener" name="org.wso2.carbon.identity.oauth.listener.IdentityOathEventListener"
                       orderId="60" enable="false"/>
        <EventListener type="org.wso2.carbon.user.core.listener.UserOperationEventListener" name="org.wso2.carbon.identity.provider.openid.listener.IdentityOpenIDUserEventListener"
                       orderId="70" enable="false"/>
    </EventListeners>
>>>>>>> ad73550ff666ba79e05671f09a761595164233dc
</Server>
